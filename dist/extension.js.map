{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://wot-ui-intellisense/./src/providers/component-factory.ts","webpack://wot-ui-intellisense/./src/utils/component_map.ts","webpack://wot-ui-intellisense/./src/utils/index.ts","webpack://wot-ui-intellisense/external commonjs \"vscode\"","webpack://wot-ui-intellisense/./src/utils/schema-loader.ts","webpack://wot-ui-intellisense/./src/providers/index.ts","webpack://wot-ui-intellisense/external node-commonjs \"fs\"","webpack://wot-ui-intellisense/./src/utils/markdown-parser.ts","webpack://wot-ui-intellisense/external node-commonjs \"path\"","webpack://wot-ui-intellisense/webpack/bootstrap","webpack://wot-ui-intellisense/./src/extension.ts"],"sourcesContent":["import * as vscode from \"vscode\";\r\nimport { ComponentMeta } from \"../utils/schema-loader\";\r\nimport { ComponentHoverProvider } from \"./../utils/index\";\r\nimport { COMPONENT_MAP } from \"../utils/component_map\";\r\nimport { loadComponentSchema } from \"../utils/schema-loader\";\r\n/**\r\n * 通用组件悬停提供者\r\n */\r\nexport class GenericComponentHoverProvider extends ComponentHoverProvider {\r\n  protected componentName: string;\r\n  protected componentMeta: ComponentMeta;\r\n\r\n  constructor(componentName: string, componentMeta: ComponentMeta) {\r\n    super();\r\n    this.componentName = componentName;\r\n    this.componentMeta = componentMeta;\r\n  }\r\n}\r\n\r\n// 统一的组件补全提供者\r\nexport class UnifiedComponentCompletionProvider\r\n  implements vscode.CompletionItemProvider\r\n{\r\n  private componentMap: Map<string, any> = new Map();\r\n\r\n  constructor() {\r\n    // 初始化所有组件的元数据\r\n    for (const { tag, docSource } of COMPONENT_MAP) {\r\n      try {\r\n        const componentName = tag.replace(\"wd-\", \"\");\r\n        const componentMeta = loadComponentSchema(componentName, docSource);\r\n        console.log(componentMeta);\r\n        this.componentMap.set(tag, componentMeta);\r\n        this.componentMap.set(componentName, componentMeta); // 同时支持驼峰式\r\n      } catch (error) {\r\n        console.error(`加载 ${tag}失败:`, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  provideCompletionItems(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): vscode.ProviderResult<vscode.CompletionItem[]> {\r\n    const linePrefix = document\r\n      .lineAt(position)\r\n      .text.substring(0, position.character);\r\n\r\n    // 1. 检查是否是标签补全上下文（如 <wd-bu）\r\n    const tagCompletionMatch = linePrefix.match(/<([a-zA-Z0-9-]*)$/);\r\n    if (tagCompletionMatch) {\r\n      return this.provideTagCompletionItems(tagCompletionMatch[1] || \"\");\r\n    }\r\n\r\n    // 2. 检查是否是属性补全上下文\r\n    const currentTagName = this.getCurrentTagName(document, position);\r\n    if (currentTagName) {\r\n      // 尝试匹配完整标签名（wd-button 或 button）\r\n      const componentMeta =\r\n        this.componentMap.get(currentTagName) ||\r\n        this.componentMap.get(`wd-${currentTagName}`) ||\r\n        this.componentMap.get(currentTagName.replace(/^wd-/, \"\"));\r\n      if (componentMeta) {\r\n        return this.provideAttributeCompletionItems(\r\n          componentMeta,\r\n          document,\r\n          position\r\n        );\r\n      }\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private provideTagCompletionItems(filter: string): vscode.CompletionItem[] {\r\n    const items: vscode.CompletionItem[] = [];\r\n\r\n    for (const [tagName, componentMeta] of this.componentMap.entries()) {\r\n      // 只处理 wd- 前缀的标签名\r\n      if (tagName.startsWith(\"wd-\") && (!filter || tagName.includes(filter))) {\r\n        const item = new vscode.CompletionItem(\r\n          tagName,\r\n          vscode.CompletionItemKind.Class\r\n        );\r\n        item.documentation = new vscode.MarkdownString(\r\n          componentMeta.documentation\r\n        );\r\n        item.insertText = new vscode.SnippetString(\r\n          `${tagName}$0></${tagName}>`\r\n        );\r\n        item.label = {\r\n          label: tagName,\r\n          description: \"Wot UI IntelliSense\",\r\n        };\r\n        item.sortText = \"0\";\r\n        item.preselect = true;\r\n        item.kind = vscode.CompletionItemKind.Snippet;\r\n        item.command = {\r\n          command: \"editor.action.triggerSuggest\",\r\n          title: \"\",\r\n        };\r\n        items.push(item);\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  private provideAttributeCompletionItems(\r\n    componentMeta: any,\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): vscode.CompletionItem[] {\r\n    // 检查是否在属性上下文中\r\n    if (!this.isInAttributeContext(document, position)) {\r\n      return [];\r\n    }\r\n\r\n    const items: vscode.CompletionItem[] = [];\r\n\r\n    // 静态属性补全\r\n    componentMeta.props.forEach((prop: any) => {\r\n      // 短横线式属性\r\n      const kebabName = prop.name.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n      const kebabItem = new vscode.CompletionItem(\r\n        kebabName,\r\n        vscode.CompletionItemKind.Property\r\n      );\r\n      kebabItem.documentation = prop.description;\r\n      if (prop.type === \"enum\") {\r\n        kebabItem.insertText = new vscode.SnippetString(\r\n          `${kebabName}=\"\\${1|${prop.values!.join(\",\")}|}\"`\r\n        );\r\n      } else if (prop.type === \"boolean\") {\r\n        kebabItem.insertText = new vscode.SnippetString(\r\n          `${kebabName}=\"\\${1|true,false|}\"`\r\n        );\r\n      } else {\r\n        kebabItem.insertText = new vscode.SnippetString(`${kebabName}=\"$1\"`);\r\n      }\r\n      kebabItem.label = {\r\n        label: kebabName,\r\n        description: \"Wot UI IntelliSense\",\r\n      };\r\n      kebabItem.sortText = \"0\";\r\n      kebabItem.preselect = true;\r\n      kebabItem.kind = vscode.CompletionItemKind.Snippet;\r\n      kebabItem.command = {\r\n        command: \"editor.action.triggerSuggest\",\r\n        title: \"\",\r\n      };\r\n      items.push(kebabItem);\r\n    });\r\n\r\n    // 事件补全\r\n    componentMeta.events?.forEach((event: any) => {\r\n      // @事件\r\n      const eventItem = new vscode.CompletionItem(\r\n        `@${event.name}`,\r\n        vscode.CompletionItemKind.Event\r\n      );\r\n      eventItem.documentation = event.description;\r\n      eventItem.insertText = new vscode.SnippetString(`@${event.name}=\"$1\"`);\r\n      items.push(eventItem);\r\n\r\n      // 短横线式事件\r\n      const kebabEventName = event.name\r\n        .replace(/([A-Z])/g, \"-$1\")\r\n        .toLowerCase();\r\n      const kebabEventItem = new vscode.CompletionItem(\r\n        `@${kebabEventName}`,\r\n        vscode.CompletionItemKind.Event\r\n      );\r\n      kebabEventItem.documentation = event.description;\r\n      kebabEventItem.insertText = new vscode.SnippetString(\r\n        `@${kebabEventName}=\"$1\"`\r\n      );\r\n      kebabEventItem.label = {\r\n        label: `@${kebabEventName}`,\r\n        description: \"Wot UI IntelliSense\",\r\n      };\r\n      kebabEventItem.sortText = \"0\";\r\n      kebabEventItem.preselect = true;\r\n      kebabEventItem.kind = vscode.CompletionItemKind.Snippet;\r\n      kebabEventItem.command = {\r\n        command: \"editor.action.triggerSuggest\",\r\n        title: \"\",\r\n      };\r\n      items.push(kebabEventItem);\r\n    });\r\n    // 自定义样式类\r\n    componentMeta.externalClasses?.forEach((externalClass: any) => {\r\n      // 短横线式 class 形式\r\n      const kebabClassName = externalClass.name\r\n        .replace(/([A-Z])/g, \"-$1\")\r\n        .toLowerCase();\r\n      const kebabClassItem = new vscode.CompletionItem(\r\n        `${kebabClassName}`,\r\n        vscode.CompletionItemKind.Property\r\n      );\r\n      kebabClassItem.documentation = externalClass.description;\r\n      kebabClassItem.insertText = new vscode.SnippetString(\r\n        `${kebabClassName}=\"$1\"`\r\n      );\r\n      kebabClassItem.label = {\r\n        label: `${kebabClassName}`,\r\n        description: \"Wot UI IntelliSense\",\r\n      };\r\n      kebabClassItem.sortText = \"0\";\r\n      kebabClassItem.preselect = true;\r\n      kebabClassItem.kind = vscode.CompletionItemKind.Property;\r\n      items.push(kebabClassItem);\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  private getCurrentTagName(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): string | null {\r\n    // 获取从文档开始到光标位置的所有文本\r\n    const textBeforeCursor = document.getText(\r\n      new vscode.Range(new vscode.Position(0, 0), position)\r\n    );\r\n\r\n    // 从光标位置向前查找最近的未闭合标签\r\n    let tagStartIndex = -1;\r\n    let tagEndIndex = -1;\r\n\r\n    // 从后向前查找最近的 < 和 >\r\n    for (let i = textBeforeCursor.length - 1; i >= 0; i--) {\r\n      const char = textBeforeCursor[i];\r\n      if (char === \">\") {\r\n        tagEndIndex = i;\r\n        break;\r\n      } else if (char === \"<\") {\r\n        tagStartIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 如果找到了开始标签但没有找到结束标签，说明光标在标签内部\r\n    if (\r\n      tagStartIndex !== -1 &&\r\n      (tagEndIndex === -1 || tagEndIndex < tagStartIndex)\r\n    ) {\r\n      // 提取标签内容并获取标签名\r\n      const tagContent = textBeforeCursor.substring(tagStartIndex + 1);\r\n      const tagNameMatch = tagContent.match(/^([a-zA-Z0-9-]+)/);\r\n      if (tagNameMatch) {\r\n        return tagNameMatch[1];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private isInAttributeContext(\r\n    document: vscode.TextDocument,\r\n    position: vscode.Position\r\n  ): boolean {\r\n    // 获取从文档开始到光标位置的所有文本\r\n    const textBeforeCursor = document.getText(\r\n      new vscode.Range(new vscode.Position(0, 0), position)\r\n    );\r\n\r\n    // 从光标位置向前查找最近的未闭合标签\r\n    let tagStartIndex = -1;\r\n    let tagEndIndex = -1;\r\n\r\n    // 从后向前查找最近的 < 和 >\r\n    for (let i = textBeforeCursor.length - 1; i >= 0; i--) {\r\n      const char = textBeforeCursor[i];\r\n      if (char === \">\") {\r\n        tagEndIndex = i;\r\n        break;\r\n      } else if (char === \"<\") {\r\n        tagStartIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 如果找到了开始标签但没有找到结束标签，说明光标在标签内部\r\n    if (\r\n      tagStartIndex !== -1 &&\r\n      (tagEndIndex === -1 || tagEndIndex < tagStartIndex)\r\n    ) {\r\n      // 检查标签内的引号是否闭合，避免在属性值内部触发补全\r\n      const textInTag = textBeforeCursor.substring(tagStartIndex);\r\n      const quoteCount = (textInTag.match(/[\"']/g) || []).length;\r\n\r\n      // 还需要检查当前位置是否在属性值内部\r\n      const textFromTagStart = textBeforeCursor.substring(tagStartIndex);\r\n      const lastEqualsIndex = textFromTagStart.lastIndexOf(\"=\");\r\n      const lastQuoteIndex = Math.max(\r\n        textFromTagStart.lastIndexOf('\"'),\r\n        textFromTagStart.lastIndexOf(\"'\")\r\n      );\r\n\r\n      // 如果等号在引号之后，说明光标不在属性值内部\r\n      if (lastEqualsIndex > lastQuoteIndex) {\r\n        return quoteCount % 2 === 1; // 等号后缺少闭合引号\r\n      }\r\n\r\n      return quoteCount % 2 === 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","\r\n\r\ninterface ComponentConfig {\r\n  tag: string;\r\n  module?: string;\r\n  triggers?: string[];\r\n  docSource?: string; // 添加文档来源字段\r\n}\r\n\r\n// 组件映射表\r\nexport const COMPONENT_MAP: ComponentConfig[] = [\r\n  { tag: \"wd-action-sheet\" },\r\n  { tag: \"wd-backtop\" },\r\n  { tag: \"wd-badge\" },\r\n  { tag: \"wd-button\" },\r\n  { tag: \"wd-calendar\" },\r\n  { tag: \"wd-calendar-view\"},\r\n  { tag: \"wd-card\" },\r\n  { tag: \"wd-cell\", docSource: \"cell\" },\r\n  { tag: \"wd-cell-group\", docSource: \"cell\" },\r\n  { tag: \"wd-checkbox\",docSource: \"checkbox\"  },\r\n  { tag: \"wd-checkbox-group\", docSource: \"checkbox\" },\r\n  { tag: \"wd-circle\" },\r\n  { tag: \"wd-col\", docSource: \"layout\" },\r\n  { tag: \"wd-col-picker\" },\r\n  { tag: \"wd-collapse-item\", docSource: \"collapse\" },\r\n  { tag: \"wd-collapse\", docSource: \"collapse\" },\r\n  { tag: \"wd-config-provider\" },\r\n  { tag: \"wd-count-down\" },\r\n  { tag: \"wd-count-to\" },\r\n  { tag: \"wd-curtain\" },\r\n  { tag: \"wd-datetime-picker\" },\r\n  { tag: \"wd-datetime-picker-view\" },\r\n  { tag: \"wd-divider\" },\r\n  { tag: \"wd-drop-menu\" },\r\n  { tag: \"wd-drop-menu-item\", docSource: \"drop-menu\" },\r\n  { tag: \"wd-fab\" },\r\n  { tag: \"wd-floating-panel\" },\r\n  { tag: \"wd-form\" },\r\n  { tag: \"wd-gap\" },\r\n  { tag: \"wd-grid\" },\r\n  { tag: \"wd-grid-item\", docSource: \"grid\" },\r\n  { tag: \"wd-icon\" },\r\n  { tag: \"wd-img\" },\r\n  { tag: \"wd-img-cropper\"},\r\n  { tag: \"wd-index-anchor\", docSource: \"index-bar\" },\r\n  { tag: \"wd-index-bar\" },\r\n  { tag: \"wd-input-number\" },\r\n  { tag: \"wd-input\" },\r\n  { tag: \"wd-keyboard\" },\r\n  { tag: \"wd-layout\" },\r\n  { tag: \"wd-loading\" },\r\n  { tag: \"wd-loadmore\" },\r\n  { tag: \"wd-message-box\" },\r\n  { tag: \"wd-navbar\" },\r\n  { tag: \"wd-navbar-capsule\", docSource: \"navbar\" },\r\n  { tag: \"wd-notice-bar\" },\r\n  { tag: \"wd-number-keyboard\" },\r\n  { tag: \"wd-overlay\" },\r\n  { tag: \"wd-pagination\" },\r\n  { tag: \"wd-password-input\" },\r\n  { tag: \"wd-picker\" },\r\n  { tag: \"wd-picker-view\"},\r\n  { tag: \"wd-popover\" },\r\n  { tag: \"wd-popup\" },\r\n  { tag: \"wd-progress\" },\r\n  { tag: \"wd-radio\" },\r\n  { tag: \"wd-radio-group\", docSource: \"radio\" },\r\n  { tag: \"wd-rate\" },\r\n  { tag: \"wd-resize\" },\r\n  { tag: \"wd-root-portal\" },\r\n  { tag: \"wd-row\", docSource: \"layout\" },\r\n  { tag: \"wd-search\" },\r\n  { tag: \"wd-segmented\" },\r\n  { tag: \"wd-select-picker\" },\r\n  { tag: \"wd-sidebar\" },\r\n  { tag: \"wd-sidebar-item\", docSource: \"sidebar\" },\r\n  { tag: \"wd-signature\" },\r\n  { tag: \"wd-skeleton\" },\r\n  { tag: \"wd-slider\" },\r\n  { tag: \"wd-sort-button\" },\r\n  { tag: \"wd-status-tip\" },\r\n  { tag: \"wd-step\", docSource: \"steps\" },\r\n  { tag: \"wd-steps\" },\r\n  { tag: \"wd-sticky\", docSource: \"sticky\" },\r\n  { tag: \"wd-sticky-box\", docSource: \"sticky\" },\r\n  { tag: \"wd-swipe-action\" },\r\n  { tag: \"wd-swiper\" },\r\n  { tag: \"wd-swiper-nav\", docSource: \"swiper\" },\r\n  { tag: \"wd-switch\" },\r\n  { tag: \"wd-tab\", docSource: \"tabs\" },\r\n  { tag: \"wd-tabbar\" },\r\n  { tag: \"wd-tabbar-item\", docSource: \"tabbar\" },\r\n  { tag: \"wd-table\" },\r\n  { tag: \"wd-table-col\", docSource: \"table\" },\r\n  { tag: \"wd-tabs\" },\r\n  { tag: \"wd-tag\" },\r\n  { tag: \"wd-text\" },\r\n  { tag: \"wd-textarea\" },\r\n  { tag: \"wd-toast\" },\r\n  { tag: \"wd-tooltip\" },\r\n  { tag: \"wd-transition\" },\r\n  { tag: \"wd-upload\" },\r\n  { tag: \"wd-notify\"},\r\n  { tag: \"wd-watermark\" },\r\n  { tag: \"wd-guide\" },\r\n];\r\n\r\n// 默认触发字符\r\nexport const DEFAULT_TRIGGERS = [\"<\", \" \", \":\", '\"', \"'\"];","import * as vscode from \"vscode\";\r\n\r\n// ======================== 工具函数 ========================\r\n// 转义正则表达式特殊字符\r\nfunction escapeRegExp(str: string) {\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n}\r\n\r\n// 驼峰式转短横线式\r\nfunction camelToKebab(str: string): string {\r\n  return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\r\n}\r\n\r\n// 短横线式转驼峰式\r\nfunction kebabToCamel(str: string): string {\r\n  return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\r\n}\r\n\r\n/**\r\n * 判断光标是否在标签名上（支持驼峰和短横线式）\r\n */\r\nexport function isOnTagName(\r\n  document: vscode.TextDocument,\r\n  position: vscode.Position,\r\n  tagName: string\r\n): boolean {\r\n  const line = document.lineAt(position);\r\n  const lineText = line.text;\r\n  const cursorOffset = position.character;\r\n\r\n  // 1. 向左查找 '<'\r\n  let tagStart = -1;\r\n  for (let i = cursorOffset; i >= 0; i--) {\r\n    if (lineText[i] === \"<\") {\r\n      tagStart = i;\r\n      break;\r\n    }\r\n  }\r\n  if (tagStart === -1) return false;\r\n\r\n  // 2. 同时匹配驼峰和短横线式\r\n  const kebabTagName = camelToKebab(tagName);\r\n  const tagRegex = new RegExp(\r\n    `^<\\\\/?(${escapeRegExp(tagName)}|${escapeRegExp(kebabTagName)})`\r\n  );\r\n\r\n  const tagPrefix = lineText.substring(tagStart);\r\n  const match = tagPrefix.match(tagRegex);\r\n\r\n  if (!match) return false;\r\n\r\n  // 3. 计算标签名的实际位置范围\r\n  const actualTagName = match[1];\r\n  const actualTagStart = tagStart + match[0].indexOf(actualTagName);\r\n  const actualTagEnd = actualTagStart + actualTagName.length;\r\n\r\n  // 4. 检查光标是否在标签名范围内\r\n  return cursorOffset >= actualTagStart && cursorOffset < actualTagEnd;\r\n}\r\n\r\n/**\r\n * 获取光标所在属性名及标签名（支持驼峰和短横线式）\r\n */\r\nexport function getAttributeInfoAtPosition(\r\n  document: vscode.TextDocument,\r\n  position: vscode.Position\r\n): {\r\n  attrName: string;\r\n  tagName: string;\r\n  isEvent: boolean;\r\n  isDynamic: boolean;\r\n} | null {\r\n  /* ---------- 1. 找到标签开始、结束位置（跨行） ---------- */\r\n  let openAngle = -1;\r\n  // 向前找最近的 <\r\n  for (let line = position.line; line >= 0; line--) {\r\n    const txt = document.lineAt(line).text;\r\n    const col = line === position.line ? position.character : txt.length - 1;\r\n    for (let i = col; i >= 0; i--) {\r\n      if (txt[i] === \"<\") {\r\n        openAngle = document.offsetAt(new vscode.Position(line, i));\r\n        break;\r\n      }\r\n    }\r\n    if (openAngle !== -1) break;\r\n  }\r\n  if (openAngle === -1) return null;\r\n\r\n  let closeAngle = -1;\r\n  // 向后找最近的 >\r\n  for (\r\n    let line = position.line, lineCount = document.lineCount;\r\n    line < lineCount;\r\n    line++\r\n  ) {\r\n    const txt = document.lineAt(line).text;\r\n    const startCol = line === position.line ? position.character : 0;\r\n    for (let i = startCol; i < txt.length; i++) {\r\n      if (txt[i] === \">\") {\r\n        closeAngle = document.offsetAt(new vscode.Position(line, i)) + 1;\r\n        break;\r\n      }\r\n    }\r\n    if (closeAngle !== -1) break;\r\n  }\r\n  if (closeAngle === -1) return null; // 没找到闭合\r\n\r\n  /* ---------- 2. 取出完整标签文本 ---------- */\r\n  const tagRange = new vscode.Range(\r\n    document.positionAt(openAngle),\r\n    document.positionAt(closeAngle)\r\n  );\r\n  const tagContent = document.getText(tagRange); // 跨行也一次性拿到\r\n\r\n  /* ---------- 3. 以下是你原来的逻辑 ---------- */\r\n  const tagNameMatch = tagContent.match(/^<([a-zA-Z0-9-]+)/);\r\n  if (!tagNameMatch) return null;\r\n  const tagName = tagNameMatch[1];\r\n\r\n  const cursorOffset = document.offsetAt(position) - openAngle; // 光标在 tagContent 里的偏移\r\n  // 改进的正则表达式，支持带值的属性\r\n  const attrRegex =\r\n    /(?:v-bind:|v-on:|@|:)?([a-zA-Z0-9-_.]+)(?:=(\"[^\"]*\"|'[^']*'|[^>\\s]*))?/g;\r\n  let match;\r\n\r\n  while ((match = attrRegex.exec(tagContent)) !== null) {\r\n    const fullMatch = match[0];\r\n    const rawAttrName = match[1];\r\n    // 使用原始属性名（保持kebab-case格式）\r\n    const attrName = rawAttrName;\r\n    const attrStart = match.index;\r\n    const attrEnd = attrStart + fullMatch.length;\r\n\r\n    if (cursorOffset >= attrStart && cursorOffset <= attrEnd) {\r\n      return {\r\n        attrName, // 保持原始格式用于匹配\r\n        tagName,\r\n        isEvent: fullMatch.startsWith(\"@\") || fullMatch.startsWith(\"v-on:\"),\r\n        isDynamic: fullMatch.startsWith(\":\") || fullMatch.startsWith(\"v-bind:\"),\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ======================== 悬停提供者 ========================\r\n/**\r\n * 通用组件悬停提供者基类（支持驼峰和短横线式属性）\r\n */\r\nexport abstract class ComponentHoverProvider implements vscode.HoverProvider {\r\n  protected abstract componentMeta: any;\r\n  protected abstract componentName: string;\r\n\r\n  provideHover(\r\n  document: vscode.TextDocument,\r\n  position: vscode.Position\r\n): vscode.ProviderResult<vscode.Hover> {\r\n  try {\r\n    // 1. 检查是否在标签名上（支持驼峰和短横线式）\r\n    const kebabComponentName = camelToKebab(this.componentName);\r\n    if (\r\n      isOnTagName(document, position, this.componentName) ||\r\n      isOnTagName(document, position, kebabComponentName)\r\n    ) {\r\n      const markdown = new vscode.MarkdownString();\r\n      markdown.isTrusted = true;\r\n      markdown.supportHtml = true;\r\n      markdown.appendMarkdown(this.componentMeta.documentation);\r\n      return new vscode.Hover(markdown);\r\n    }\r\n\r\n    // 2. 检查是否在属性上（支持所有Vue写法）\r\n    const attrInfo = getAttributeInfoAtPosition(document, position);\r\n\r\n    // 修复组件名称匹配逻辑\r\n    if (\r\n      attrInfo &&\r\n      (attrInfo.tagName === this.componentName.replace(\"wd-\", \"\") ||\r\n        attrInfo.tagName === kebabComponentName ||\r\n        attrInfo.tagName === kebabComponentName.replace(\"wd-\", \"\"))\r\n    ) {\r\n      // 处理外部样式类属性\r\n      if (this.componentMeta.externalClasses) {\r\n        // 查找匹配的外部样式类\r\n        const externalClass = this.componentMeta.externalClasses.find((ec: any) => \r\n          ec.name === attrInfo.attrName || \r\n          camelToKebab(ec.name) === attrInfo.attrName\r\n        );\r\n        \r\n        if (externalClass) {\r\n          const markdown = new vscode.MarkdownString();\r\n          markdown.isTrusted = true;\r\n          markdown.supportHtml = true;\r\n          markdown.appendMarkdown(\"### 外部样式类\\n\\n\");\r\n          markdown.appendMarkdown(\r\n            `${externalClass.name} ${externalClass.description || ''}\\n\\n`\r\n          );\r\n          markdown.appendMarkdown(\"**类型**: string\\n\\n\");\r\n          if (externalClass.version) {\r\n            markdown.appendMarkdown(`**最低版本**: ${externalClass.version}\\n\\n`);\r\n          }\r\n          return new vscode.Hover(markdown);\r\n        }\r\n      }\r\n\r\n      let prop, event;\r\n\r\n      // 同时匹配驼峰式和短横线式\r\n      const findProp = (name: string) =>\r\n        this.componentMeta.props.find(\r\n          (p: any) =>\r\n            p.name === name ||\r\n            camelToKebab(p.name) === name ||\r\n            kebabToCamel(p.name) === name\r\n        );\r\n\r\n      const findEvent = (name: string) =>\r\n        this.componentMeta.events?.find(\r\n          (e: any) =>\r\n            e.name === name ||\r\n            camelToKebab(e.name) === name ||\r\n            kebabToCamel(e.name) === name\r\n        );\r\n\r\n      if (attrInfo.isEvent) {\r\n        event = findEvent(attrInfo.attrName);\r\n        if (!event) {\r\n          // 尝试短横线式匹配\r\n          const kebabName = camelToKebab(attrInfo.attrName);\r\n          event = findEvent(kebabName);\r\n        }\r\n\r\n        if (!event) {\r\n          // 尝试驼峰式匹配\r\n          const camelName = kebabToCamel(attrInfo.attrName);\r\n          event = findEvent(camelName);\r\n        }\r\n\r\n        if (event) {\r\n          const markdown = new vscode.MarkdownString();\r\n          markdown.isTrusted = true;\r\n          markdown.supportHtml = true;\r\n\r\n          markdown.appendMarkdown(\r\n            `### ${attrInfo.isDynamic ? \"动态事件\" : \"事件\"} \\`${\r\n              event.name\r\n            }\\`\\n\\n`\r\n          );\r\n          markdown.appendMarkdown(`${event.description}\\n\\n`);\r\n          markdown.appendMarkdown(`**类型**: 事件处理器\\n\\n`);\r\n\r\n          if (event.arguments) {\r\n            markdown.appendMarkdown(`**事件参数**: \\n`);\r\n            event.arguments.forEach((arg: any) => {\r\n              markdown.appendMarkdown(\r\n                `- \\`${arg.name}\\`: ${arg.type} - ${arg.description}\\n`\r\n              );\r\n            });\r\n            markdown.appendMarkdown(\"\\n\");\r\n          }\r\n\r\n          return new vscode.Hover(markdown);\r\n        }\r\n      } else {\r\n        // 属性悬停\r\n        prop = findProp(attrInfo.attrName);\r\n\r\n        if (!prop) {\r\n          // 尝试短横线式匹配\r\n          const kebabName = camelToKebab(attrInfo.attrName);\r\n          prop = findProp(kebabName);\r\n        }\r\n\r\n        if (!prop) {\r\n          // 尝试驼峰式匹配\r\n          const camelName = kebabToCamel(attrInfo.attrName);\r\n          prop = findProp(camelName);\r\n        }\r\n\r\n        if (prop) {\r\n          const markdown = new vscode.MarkdownString();\r\n          markdown.isTrusted = true;\r\n          markdown.supportHtml = true;\r\n\r\n          markdown.appendMarkdown(\r\n            `### ${attrInfo.isDynamic ? \"动态属性\" : \"属性\"} \\`${\r\n              prop.name\r\n            }\\`\\n\\n`\r\n          );\r\n          markdown.appendMarkdown(`${prop.description}\\n\\n`);\r\n          markdown.appendMarkdown(`**类型**: ${prop.type}\\n\\n`);\r\n\r\n          if (prop.values) {\r\n            markdown.appendMarkdown(\r\n              `**可选值**: ${prop.values.join(\", \")}\\n\\n`\r\n            );\r\n          }\r\n\r\n          if (prop.default) {\r\n            markdown.appendMarkdown(`**默认值**: ${prop.default}\\n\\n`);\r\n          }\r\n\r\n          return new vscode.Hover(markdown);\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error in provideHover:\", error);\r\n    return null;\r\n  }\r\n}\r\n}\r\n\r\n// ======================== 诊断提供者 ========================\r\n/**\r\n * 通用组件诊断提供者基类（支持驼峰和短横线式属性）\r\n */\r\nexport abstract class ComponentDiagnosticProvider {\r\n  protected abstract componentName: string;\r\n  protected abstract componentMeta: any;\r\n  protected diagnosticCollection!: vscode.DiagnosticCollection;\r\n\r\n  constructor() {\r\n    vscode.workspace.onDidChangeTextDocument((e) =>\r\n      this.updateDiagnostics(e.document)\r\n    );\r\n  }\r\n\r\n  protected initialize() {\r\n    if (!this.diagnosticCollection) {\r\n      this.diagnosticCollection = vscode.languages.createDiagnosticCollection(\r\n        this.componentName\r\n      );\r\n    }\r\n  }\r\n\r\n  public updateDiagnostics(document: vscode.TextDocument) {\r\n    if (document.languageId !== \"html\" && document.languageId !== \"vue\") return;\r\n\r\n    this.initialize();\r\n\r\n    const diagnostics: vscode.Diagnostic[] = [];\r\n    const text = document.getText();\r\n    const regex = this.getTagRegex();\r\n    let match;\r\n\r\n    while ((match = regex.exec(text))) {\r\n      const startPos = document.positionAt(match.index);\r\n      const endPos = document.positionAt(match.index + match[0].length);\r\n      const range = new vscode.Range(startPos, endPos);\r\n\r\n      this.checkAttributeValues(match[0], range, diagnostics);\r\n      this.checkDuplicateAttributes(match[0], range, diagnostics);\r\n      this.checkEventHandlers(match[0], range, diagnostics);\r\n      this.checkBooleanAttributes(match[0], range, diagnostics);\r\n\r\n      // 调用额外的诊断方法\r\n      if (this.getAdditionalDiagnostics) {\r\n        this.getAdditionalDiagnostics(match[0], range, diagnostics);\r\n      }\r\n    }\r\n\r\n    this.diagnosticCollection.set(document.uri, diagnostics);\r\n  }\r\n\r\n  protected getTagRegex(): RegExp {\r\n    const kebabComponentName = camelToKebab(this.componentName);\r\n    return new RegExp(\r\n      `<(${this.componentName}|${kebabComponentName})\\\\s+[^>]*>`,\r\n      \"g\"\r\n    );\r\n  }\r\n\r\n  protected checkAttributeValues(\r\n    tag: string,\r\n    range: vscode.Range,\r\n    diagnostics: vscode.Diagnostic[]\r\n  ) {\r\n    this.componentMeta.props\r\n      .filter((prop: any) => prop.type === \"enum\")\r\n      .forEach((prop: any) => {\r\n        // 同时检查驼峰式和短横线式\r\n        const propNames = [prop.name, camelToKebab(prop.name)];\r\n\r\n        propNames.forEach((propName) => {\r\n          // 检查静态属性\r\n          const staticAttrMatch = tag.match(\r\n            new RegExp(`${propName}=[\"']([^\"']+)[\"']`)\r\n          );\r\n          if (staticAttrMatch && !prop.values.includes(staticAttrMatch[1])) {\r\n            diagnostics.push({\r\n              severity: vscode.DiagnosticSeverity.Error,\r\n              range: range,\r\n              message: `无效的 ${propName} 属性值: ${staticAttrMatch[1]}`,\r\n              source: \"Wot UI IntelliSense\",\r\n            });\r\n          }\r\n\r\n          // 检查动态属性值（需要静态值的情况）\r\n          const dynamicAttrMatch = tag.match(\r\n            new RegExp(`:${propName}=[\"']([^\"']+)[\"']`)\r\n          );\r\n          if (dynamicAttrMatch && !prop.values.includes(dynamicAttrMatch[1])) {\r\n            diagnostics.push({\r\n              severity: vscode.DiagnosticSeverity.Warning,\r\n              range: range,\r\n              message: `动态属性 :${propName} 使用了静态值，建议使用变量`,\r\n              source: \"Wot UI IntelliSense\",\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  protected checkDuplicateAttributes(\r\n    tag: string,\r\n    range: vscode.Range,\r\n    diagnostics: vscode.Diagnostic[]\r\n  ) {\r\n    const attrs = tag.match(/(?:v-bind:|v-on:|@|:)?([a-zA-Z0-9-_.]+)=?/g) || [];\r\n    const attrMap = new Map<string, string>();\r\n\r\n    attrs.forEach((attr) => {\r\n      const match = attr.match(/(?:v-bind:|v-on:|@|:)?([a-zA-Z0-9-_.]+)/);\r\n      if (!match) return;\r\n\r\n      const rawName = match[1];\r\n      // 标准化属性名（统一转为驼峰式）\r\n      const normalizedName = kebabToCamel(rawName);\r\n\r\n      if (attrMap.has(normalizedName)) {\r\n        const originalRawName = attrMap.get(normalizedName);\r\n        diagnostics.push({\r\n          severity: vscode.DiagnosticSeverity.Warning,\r\n          range: range,\r\n          message: `重复的属性: ${originalRawName} 和 ${rawName} 都映射到 ${normalizedName}`,\r\n          source: \"Wot UI IntelliSense\",\r\n        });\r\n      } else {\r\n        attrMap.set(normalizedName, rawName);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected checkEventHandlers(\r\n    tag: string,\r\n    range: vscode.Range,\r\n    diagnostics: vscode.Diagnostic[]\r\n  ) {\r\n    this.componentMeta.events?.forEach((event: any) => {\r\n      // 同时检查驼峰式和短横线式\r\n      const eventNames = [event.name, camelToKebab(event.name)];\r\n\r\n      eventNames.forEach((eventName) => {\r\n        const eventRegex = new RegExp(`(@|v-on:)${eventName}=[\"']([^\"']*)[\"']`);\r\n        const match = tag.match(eventRegex);\r\n\r\n        if (match) {\r\n          const handler = match[2];\r\n          // 简单检查处理器是否有效\r\n          if (!handler.trim()) {\r\n            diagnostics.push({\r\n              severity: vscode.DiagnosticSeverity.Error,\r\n              range: range,\r\n              message: `事件 ${eventName} 缺少处理器`,\r\n              source: \"Wot UI IntelliSense\",\r\n            });\r\n          } else if (\r\n            !handler.includes(\"(\") &&\r\n            !handler.includes(\")\") &&\r\n            !handler.startsWith(\"$event\")\r\n          ) {\r\n            diagnostics.push({\r\n              severity: vscode.DiagnosticSeverity.Warning,\r\n              range: range,\r\n              message: `事件处理器应包含括号: ${handler}()`,\r\n              source: \"Wot UI IntelliSense\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  protected checkBooleanAttributes(\r\n    tag: string,\r\n    range: vscode.Range,\r\n    diagnostics: vscode.Diagnostic[]\r\n  ) {\r\n    this.componentMeta.props\r\n      .filter((prop: any) => prop.type === \"boolean\")\r\n      .forEach((prop: any) => {\r\n        // 同时检查驼峰式和短横线式\r\n        const propNames = [prop.name, camelToKebab(prop.name)];\r\n\r\n        propNames.forEach((propName) => {\r\n          // 检查静态布尔属性是否有值\r\n          const staticAttrMatch = tag.match(\r\n            new RegExp(`${propName}=[\"']([^\"']*)[\"']`)\r\n          );\r\n          if (staticAttrMatch) {\r\n            const value = staticAttrMatch[1];\r\n            if (value && value !== \"true\" && value !== \"false\") {\r\n              diagnostics.push({\r\n                severity: vscode.DiagnosticSeverity.Warning,\r\n                range: range,\r\n                message: `布尔属性 ${propName} 应使用简写或动态绑定`,\r\n                source: \"Wot UI IntelliSense\",\r\n              });\r\n            }\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  protected abstract getAdditionalDiagnostics?(\r\n    tag: string,\r\n    range: vscode.Range,\r\n    diagnostics: vscode.Diagnostic[]\r\n  ): void;\r\n}\r\n","module.exports = require(\"vscode\");","import { parseComponentMarkdown, loadComponentDoc } from './markdown-parser';\n\nexport interface ComponentMeta {\n  name: string;\n  props: Array<{\n    name: string;\n    type: 'enum' | 'boolean' | 'string' | 'number';\n    values?: string[];\n    description: string;\n    default?: string;\n    version?: string;\n  }>;\n  events: Array<{ \n    name: string; \n    description: string;\n    version?: string;\n  }>;\n  slots?: Array<{ \n    name: string; \n    description: string;\n    version?: string;\n  }>;\n  externalClasses?: Array<{ \n    name: string; \n    description: string;\n    version?: string;\n  }>;\n  dataStructures?: Array<{\n    name: string;\n    fields: Array<{\n      name: string;\n      type: string;\n      description: string;\n      version?: string;\n    }>;\n  }>;\n  documentation: string;\n}\n\n/**\n * 通用组件schema加载器\n * @param componentName 组件名称（不包含wd-前缀）\n * @param docSource 文档来源组件名称（可选）\n * @returns 组件元数据\n */\nexport function loadComponentSchema(componentName: string, docSource?: string): ComponentMeta {\n  try {\n    // 解析组件文档，传递文档来源参数\n    const componentInfo = parseComponentMarkdown(componentName, docSource);\n    // 如果解析成功，则使用解析结果；否则使用默认值\n    if (componentInfo) {\n      return {\n        name: componentInfo.name,\n        props: componentInfo.props.map(prop => ({\n          name: prop.name,\n          type: prop.type as 'enum' | 'boolean' | 'string' | 'number',\n          values: prop.values,\n          description: prop.description,\n          default: prop.default,\n          version: prop.version\n        })),\n        events: componentInfo.events.map(event => ({\n          name: event.name,\n          description: event.description,\n          version: event.version\n        })),\n        slots: componentInfo.slots?.map(slot => ({\n          name: slot.name,\n          description: slot.description,\n          version: slot.version\n        })),\n        externalClasses: componentInfo.externalClasses?.map(externalClass => ({\n          name: externalClass.name,\n          description: externalClass.description,\n          version: externalClass.version\n        })),\n        dataStructures: componentInfo.dataStructures?.map(structure => ({\n          name: structure.name,\n          fields: structure.fields.map(field => ({\n            name: field.name,\n            type: field.type,\n            description: field.description,\n            version: field.version\n          }))\n        })),\n        documentation: componentInfo.documentation\n      };\n    }\n    \n    // 默认值\n    return {\n      name: `wd-${componentName}`,\n      props: [],\n      events: [],\n      documentation: loadComponentDoc(componentName, docSource) // 传递文档来源参数\n    };\n  } catch (error) {\n    console.error(`加载组件schema失败: ${componentName}`, error);\n    return {\n      name: `wd-${componentName}`,\n      props: [],\n      events: [],\n      documentation: ''\n    };\n  }\n}\n\n/**\n * 异步加载组件schema\n * @param componentName 组件名称（不包含wd-前缀）\n * @param docSource 文档来源组件名称（可选）\n * @returns 组件元数据的Promise\n */\nexport async function loadComponentSchemaAsync(componentName: string, docSource?: string): Promise<ComponentMeta> {\n  return loadComponentSchema(componentName, docSource);\n}","// 静态导入所有组件\r\n\r\nimport * as vscode from \"vscode\";\r\nimport { COMPONENT_MAP } from \"../utils/component_map\";\r\nimport { loadComponentSchema } from \"../utils/schema-loader\";\r\nimport {\r\n  GenericComponentHoverProvider,\r\n  UnifiedComponentCompletionProvider,\r\n} from \"../providers/component-factory\";\r\n\r\nexport async function registerAll(context: vscode.ExtensionContext) {\r\n  console.log(`Registering ${COMPONENT_MAP.length} components`);\r\n\r\n  try {\r\n    // 使用统一的组件补全提供者\r\n    const unifiedProvider = new UnifiedComponentCompletionProvider();\r\n    const selector: vscode.DocumentSelector = [\r\n      { language: \"vue\", scheme: \"file\" },\r\n      { language: \"html\", scheme: \"file\" },\r\n    ];\r\n\r\n    context.subscriptions.push(\r\n      vscode.languages.registerCompletionItemProvider(\r\n        selector,\r\n        unifiedProvider,\r\n        \"<\",\r\n        \"\\n\",\r\n        \"\\t\",\r\n        \" \",\r\n        \":\",\r\n        \"@\" // 触发字符\r\n      )\r\n    );\r\n\r\n    console.log(\"Successfully registered unified completion provider\");\r\n\r\n    // 保留原有的悬停提供者（可以保持每个组件一个实例）\r\n    for (const { tag, docSource } of COMPONENT_MAP) {\r\n      try {\r\n        const componentName = tag.replace(\"wd-\", \"\");\r\n        const componentMeta = loadComponentSchema(componentName, docSource);\r\n        const hover = new GenericComponentHoverProvider(tag, componentMeta);\r\n        const selector: vscode.DocumentSelector = [\r\n          { language: \"vue\", scheme: \"file\" },\r\n          { language: \"html\", scheme: \"file\" },\r\n        ];\r\n\r\n        context.subscriptions.push(\r\n          vscode.languages.registerHoverProvider(selector, hover)\r\n        );\r\n\r\n        console.log(`Successfully registered hover for ${tag}`);\r\n      } catch (error) {\r\n        console.error(`Failed to register hover for ${tag}:`, error);\r\n      }\r\n    }\r\n\r\n    console.log(`Finished registering components`);\r\n  } catch (error) {\r\n    console.error(\"Failed to register unified completion provider:\", error);\r\n  }\r\n}\r\n","module.exports = require(\"fs\");","import * as fs from \"fs\";\nimport * as path from \"path\";\n\ninterface ComponentInfo {\n  name: string;\n  props: Array<{\n    name: string;\n    type: string;\n    values?: string[];\n    description: string;\n    default?: string;\n    version?: string;\n  }>;\n  events: Array<{\n    name: string;\n    description: string;\n    version?: string;\n  }>;\n  slots?: Array<{\n    name: string;\n    description: string;\n    version?: string;\n  }>;\n  externalClasses?: Array<{\n    name: string;\n    description: string;\n    version?: string;\n  }>;\n  dataStructures?: Array<{\n    name: string;\n    fields: Array<{\n      name: string;\n      type: string;\n      description: string;\n      version?: string;\n    }>;\n  }>;\n  documentation: string;\n}\n\n/**\n * 处理组件属性，特别是v-model相关属性\n * @param prop 原始属性数据\n * @returns 处理后的属性数组\n */\nfunction processComponentProp(prop: string[]): Array<{\n  name: string;\n  type: string;\n  values?: string[];\n  description: string;\n  default?: string;\n  version?: string;\n}> {\n  // 解析属性类型\n  let type: string = prop[2]?.toLowerCase() || \"string\";\n  let values: string[] | undefined;\n\n  // 如果类型是枚举类型，解析可选值\n  if (\n    type === \"string\" &&\n    prop[3] &&\n    prop[3] !== \"-\" &&\n    prop[3].includes(\"/\")\n  ) {\n    values = prop[3]\n      .split(\"/\")\n      .map((v) => v.trim())\n      .filter((v) => v !== \"-\");\n    if (values.length > 0) {\n      type = \"enum\";\n    }\n  }\n\n  const result: Array<{\n    name: string;\n    type: string;\n    values?: string[];\n    description: string;\n    default?: string;\n    version?: string;\n  }> = [];\n\n  // 处理复合属性名，如 'v-model / modelValue' 或 'modelValue / v-model' 等\n  const propNames = prop[0]\n    .split(\"/\")\n    .map((name) => name.trim().replace(/`/g, \"\"));\n  const normalizedNames = propNames.map((name) => {\n    // 标准化属性名，移除反引号\n    return name.replace(/`/g, \"\");\n  });\n\n  // 添加所有属性名作为独立属性\n  normalizedNames.forEach((name, index) => {\n    result.push({\n      name: name,\n      type,\n      values,\n      description:\n        index === 0\n          ? prop[1] || \"\"\n          : `${prop[1] || \"\"}\\n\\n> 该属性支持 \\`v-model\\` 双向绑定`,\n      default: prop[4] && prop[4] !== \"-\" ? prop[4] : undefined,\n      version: prop[5] && prop[5] !== \"-\" ? prop[5] : undefined,\n    });\n  });\n\n  // 检查是否包含v-model相关属性名\n  const hasVModel = normalizedNames.some(\n    (name) =>\n      name === \"v-model\" || name === \"modelValue\" || name === \"model-value\"\n  );\n\n  // 如果包含v-model相关属性，确保三种形式都存在\n  if (hasVModel) {\n    const existingNames = new Set(normalizedNames);\n    const vModelForms = [\n      {\n        name: \"v-model\",\n        description: `${prop[1] || \"\"}\\n\\n> 该属性支持 \\`v-model\\` 双向绑定`,\n      },\n      {\n        name: \"model-value\",\n        description: `${prop[1] || \"\"}\\n\\n> 该属性支持 \\`v-model\\` 双向绑定`,\n      },\n      {\n        name: \"modelValue\",\n        description: `${prop[1] || \"\"}\\n\\n> 该属性支持 \\`v-model\\` 双向绑定`,\n      },\n    ];\n\n    // 确保所有v-model形式都存在\n    vModelForms.forEach((form) => {\n      if (!existingNames.has(form.name)) {\n        result.push({\n          name: form.name,\n          type,\n          values,\n          description: form.description,\n          default: prop[4] && prop[4] !== \"-\" ? prop[4] : undefined,\n          version: prop[5] && prop[5] !== \"-\" ? prop[5] : undefined,\n        });\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * 解析 Markdown 文档并提取组件信息\n * @param componentName 组件名称（不包含wd-前缀）\n * @param docSource 文档来源组件名称（可选）\n * @returns 组件信息对象\n */\nexport function parseComponentMarkdown(\n  componentName: string,\n  docSource?: string\n): ComponentInfo | null {\n  try {\n    // 如果指定了文档来源，则使用来源文档\n    const actualComponentName = docSource || componentName;\n\n    // 尝试多种路径查找文档文件\n    const possiblePaths = [\n      // path.resolve(__dirname, `../src/component/${actualComponentName}.md`), // 开发环境\n      path.resolve(__dirname, `./src/component/${actualComponentName}.md`), // 打包后运行环境\n    ];\n\n    let docPath = \"\";\n    for (const possiblePath of possiblePaths) {\n      if (fs.existsSync(possiblePath)) {\n        docPath = possiblePath;\n        break;\n      }\n    }\n\n    if (!docPath) {\n      console.warn(`文档文件不存在，尝试路径: ${possiblePaths.join(\", \")}`);\n      return null;\n    }\n\n    // 读取文档内容\n    const content = fs.readFileSync(docPath, \"utf-8\");\n\n    // 如果是子组件且指定了文档来源，需要特殊处理\n    if (docSource) {\n      // 通用处理子组件情况，如 wd-table-col 从 table.md 中提取 TableColumn 相关信息\n      // 将组件名从 kebab-case 转换为 PascalCase 用于匹配标题\n      // 提取子组件 Attributes 表格\n      const props = extractTableSection(content, \"Attributes\", componentName);\n      // 提取子组件 Slot 表格（如果存在）\n      const slots = extractTableSection(content, \"Slot\", componentName).concat(\n        extractTableSection(content, \"Slots\", componentName)\n      );\n      // 提取子组件 Events 表格（如果存在）\n      const events = extractTableSection(content, \"Events\", componentName);\n      // 提取子组件外部样式类表格（如果存在）\n      const externalClasses = extractTableSection(\n        content,\n        \"外部样式类\",\n        componentName\n      );\n      // 提取自定义数据结构表格（如 Action 数据结构、Panel 数据结构等）\n      const dataStructures = extractDataStructures(content);\n      // 返回子组件信息对象\n      return {\n        name: `wd-${componentName}`,\n        props: props.reduce(\n          (acc, prop) => {\n            return acc.concat(processComponentProp(prop));\n          },\n          [] as Array<{\n            name: string;\n            type: string;\n            values?: string[];\n            description: string;\n            default?: string;\n            version?: string;\n          }>\n        ),\n        events: events.map((event) => ({\n          name: event[0],\n          description: event[1] || \"\",\n          version: event[3] && event[3] !== \"-\" ? event[3] : undefined,\n        })),\n        slots:\n          slots.length > 0\n            ? slots.map((slot) => ({\n                name: slot[0],\n                description: slot[1] || \"\",\n                version: slot[2] && slot[2] !== \"-\" ? slot[2] : undefined,\n              }))\n            : undefined,\n        externalClasses:\n          externalClasses.length > 0\n            ? externalClasses.map((externalClass) => ({\n                name: externalClass[0],\n                description: externalClass[1] || \"\",\n                version:\n                  externalClass[2] && externalClass[2] !== \"-\"\n                    ? externalClass[2]\n                    : undefined,\n              }))\n            : undefined,\n        dataStructures: dataStructures.length > 0 ? dataStructures : undefined,\n        documentation: content,\n      };\n    }\n\n    // 提取 Attributes 表格\n    const props = extractTableSection(content, \"Attributes\");\n    // 提取 Events 表格\n    const events = extractTableSection(content, \"Events\");\n    // 提取 Slots 表格（如果存在）\n    const slots = extractTableSection(content, \"Slot\").concat(\n      extractTableSection(content, \"Slots\")\n    );\n    // 提取外部样式类表格（如果存在）\n    const externalClasses = extractTableSection(content, \"外部样式类\");\n    // 提取自定义数据结构表格（如 Action 数据结构、Panel 数据结构等）\n    const dataStructures = extractDataStructures(content);\n    // 返回组件信息对象\n    return {\n      name: `wd-${componentName}`,\n      props: props.reduce(\n        (acc, prop) => {\n          return acc.concat(processComponentProp(prop));\n        },\n        [] as Array<{\n          name: string;\n          type: string;\n          values?: string[];\n          description: string;\n          default?: string;\n          version?: string;\n        }>\n      ),\n      events: events.map((event) => ({\n        name: event[0],\n        description: event[1] || \"\",\n        version: event[3] && event[3] !== \"-\" ? event[3] : undefined,\n      })),\n      slots:\n        slots.length > 0\n          ? slots.map((slot) => ({\n              name: slot[0],\n              description: slot[1] || \"\",\n              version: slot[2] && slot[2] !== \"-\" ? slot[2] : undefined,\n            }))\n          : undefined,\n      externalClasses:\n        externalClasses.length > 0\n          ? externalClasses.map((externalClass) => ({\n              name: externalClass[0],\n              description: externalClass[1] || \"\",\n              version:\n                externalClass[2] && externalClass[2] !== \"-\"\n                  ? externalClass[2]\n                  : undefined,\n            }))\n          : undefined,\n      dataStructures: dataStructures.length > 0 ? dataStructures : undefined,\n      documentation: content,\n    };\n  } catch (error) {\n    console.error(`解析文档文件失败: ${componentName}`, error);\n    return null;\n  }\n}\n\n/**\n * 从 Markdown 内容中提取指定标题下的表格内容\n * @param content       Markdown 全文\n * @param sectionTitle  段落标题，如 \"Attributes\"\n * @param componentName 组件短横线名，如 \"cell\"\n * @returns             表格数据数组\n */\nfunction extractTableSection(\n  content: string,\n  sectionTitle: string,\n  componentName?: string\n): string[][] {\n  const escape = (s: string) => s.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n\n  /* 公用：从第一个 '|' 到 '\\n\\n'，再去掉表头 */\n  const sliceTable = (src: string, from: number): string[][] => {\n    const end = src.indexOf('\\n\\n', from);\n    let raw = src.substring(from, end === -1 ? src.length : end);\n    \n    // 移除HTML标签，保留标签内的文本内容\n    raw = raw.replace(/<[^>]+>/g, '');\n    \n    const lines = raw.split('\\n').filter(l => l.trim());\n    if (lines.length < 3) return [];\n    \n    // 修复：只过滤掉完全不包含'|'的行，但保留只包含'|'和格式符号的分隔行\n    const validLines = lines.filter(l => l.includes('|'));\n    if (validLines.length < 3) return [];\n    \n    return validLines.slice(2).map(line =>\n      line.split('|')\n          .map(cell => cell.trim())\n          .filter((_, i, arr) => i > 0 && i < arr.length - 1)\n    ).filter(row => row.length > 0);\n  };\n\n  /* ===== 1. 精确匹配：整行等于 \"## PascalCase Attributes\" ===== */\n  if (componentName) {\n    const pascal = componentName\n      .split(\"-\")\n      .map((w) => w.charAt(0).toUpperCase() + w.slice(1))\n      .join(\"\");\n    const exactReg = new RegExp(\n      `(?:^|\\\\n)#{2,3}\\\\s*${pascal}\\\\s+${escape(sectionTitle)}\\\\s*$`,\n      \"im\"\n    );\n    const m = exactReg.exec(content);\n    if (m) {\n      const pipe = content.indexOf(\"|\", m.index + m[0].length);\n      if (pipe !== -1) return sliceTable(content, pipe);\n    }\n  }\n\n  /* ===== 2. 模糊匹配：行内包含组件名+标题 ===== */\n  if (componentName) {\n    const pascal = componentName\n      .split(\"-\")\n      .map((w) => w.charAt(0).toUpperCase() + w.slice(1))\n      .join(\"\");\n    const fuzzyReg = new RegExp(\n      `(?:^|\\\\n)#{2,3}\\\\s*\\\\w*${pascal}\\\\w*\\\\s+${escape(sectionTitle)}\\\\s*$`,\n      \"im\"\n    );\n    const m = fuzzyReg.exec(content);\n    if (m) {\n      const pipe = content.indexOf(\"|\", m.index + m[0].length);\n      if (pipe !== -1) return sliceTable(content, pipe);\n    }\n  }\n\n  /* ===== 3. 通用回落：纯 \"## Attributes\" ===== */\n  const normalReg = new RegExp(\n    `(?:^|\\\\n)#{2,3}\\\\s*${escape(sectionTitle)}\\\\s*$`,\n    \"im\"\n  );\n  const m = normalReg.exec(content);\n  if (m) {\n    const pipe = content.indexOf(\"|\", m.index + m[0].length);\n    if (pipe !== -1) return sliceTable(content, pipe);\n  }\n\n  return [];\n}\n\n/**\n * 提取自定义数据结构信息\n * @param content Markdown 内容\n * @returns 数据结构数组\n */\nfunction extractDataStructures(content: string): Array<{\n  name: string;\n  fields: Array<{\n    name: string;\n    type: string;\n    description: string;\n    version?: string;\n  }>;\n}> {\n  const dataStructures: Array<{\n    name: string;\n    fields: Array<{\n      name: string;\n      type: string;\n      description: string;\n      version?: string;\n    }>;\n  }> = [];\n\n  // 查找所有 \"xxx 数据结构\" 标题\n  const dataStructureRegex =\n    /\\n## (.*?数据结构)\\n\\n([\\s\\S]*?)(?=\\n## |\\n### |\\n\\[|\\Z)/g;\n  let match;\n\n  while ((match = dataStructureRegex.exec(content)) !== null) {\n    const structureName = match[1].trim();\n    const tableContent = match[2];\n\n    // 解析数据结构表格\n    const lines = tableContent.split(\"\\n\").filter((line) => line.trim() !== \"\");\n    if (lines.length >= 3) {\n      // 移除表头分隔行\n      const dataLines = lines.slice(2);\n\n      // 解析每行数据\n      const fields = dataLines\n        .map((line) => {\n          const cells = line\n            .split(\"|\")\n            .map((cell) => cell.trim())\n            .filter((cell) => cell);\n          if (cells.length >= 3) {\n            return {\n              name: cells[0],\n              type: cells[2],\n              description: cells[1] || \"\",\n              version: cells[3] && cells[3] !== \"-\" ? cells[3] : undefined,\n            };\n          }\n          return null;\n        })\n        .filter((field) => field !== null) as Array<{\n        name: string;\n        type: string;\n        description: string;\n        version?: string;\n      }>;\n\n      dataStructures.push({\n        name: structureName,\n        fields,\n      });\n    }\n  }\n\n  return dataStructures;\n}\n\n/**\n * 同步读取组件文档内容\n * @param componentName 组件名称（不包含wd-前缀）\n * @param docSource 文档来源组件名称（可选）\n * @returns 组件文档内容\n */\nexport function loadComponentDoc(\n  componentName: string,\n  docSource?: string\n): string {\n  try {\n    // 如果指定了文档来源，则使用来源文档\n    const actualComponentName = docSource || componentName;\n\n    // 尝试多种路径查找文档文件\n    const possiblePaths = [\n      // path.resolve(__dirname, `../src/component/${actualComponentName}.md`), // 开发环境\n      path.resolve(__dirname, `./src/component/${actualComponentName}.md`), // 打包后运行环境\n    ];\n\n    let docPath = \"\";\n    for (const possiblePath of possiblePaths) {\n      if (fs.existsSync(possiblePath)) {\n        docPath = possiblePath;\n        break;\n      }\n    }\n\n    if (!docPath) {\n      console.warn(`文档文件不存在，尝试路径: ${possiblePaths.join(\", \")}`);\n      return \"\";\n    }\n\n    // 读取文档内容\n    const content = fs.readFileSync(docPath, \"utf-8\");\n    console.log(`加载文档: ${componentName}`);\n    return content;\n  } catch (error) {\n    console.error(`读取文档文件失败: ${componentName}`, error);\n    return \"\";\n  }\n}\n\n/**\n * 异步读取组件文档内容\n * @param componentName 组件名称（不包含wd-前缀）\n * @param docSource 文档来源组件名称（可选）\n * @returns 组件文档内容\n */\nexport async function loadComponentDocAsync(\n  componentName: string,\n  docSource?: string\n): Promise<string> {\n  try {\n    // 如果指定了文档来源，则使用来源文档\n    const actualComponentName = docSource || componentName;\n\n    // 尝试多种路径查找文档文件\n    const possiblePaths = [\n      // path.resolve(__dirname, `../src/component/${actualComponentName}.md`), // 开发环境\n      path.resolve(__dirname, `./src/component/${actualComponentName}.md`), // 打包后运行环境\n    ];\n\n    let docPath = \"\";\n    for (const possiblePath of possiblePaths) {\n      if (fs.existsSync(possiblePath)) {\n        docPath = possiblePath;\n        break;\n      }\n    }\n\n    if (!docPath) {\n      console.warn(`文档文件不存在，尝试路径: ${possiblePaths.join(\", \")}`);\n      return \"\";\n    }\n\n    // 使用 Promise 方式读取文件\n    const content = await fs.promises.readFile(docPath, \"utf-8\");\n    return content;\n  } catch (error) {\n    console.error(`读取文档文件失败: ${componentName}`, error);\n    return \"\";\n  }\n}\n","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport { registerAll } from './providers/index';\n\nexport async function activate(context: vscode.ExtensionContext) {\n  console.log('🚀 Wot UI IntelliSense 插件已激活!');\n  console.log('正在注册组件...');\n  \n  await registerAll(context);\n  \n  console.log('✅ Wot UI IntelliSense 插件注册完成!');\n}\nexport async function deactivate() {\n  console.log('🚫 Wot UI IntelliSense 插件已停用!');\n}\n"],"names":["GenericComponentHoverProvider","ComponentHoverProvider","componentName","componentMeta","constructor","super","this","componentMap","Map","tag","docSource","COMPONENT_MAP","replace","loadComponentSchema","console","log","set","error","provideCompletionItems","document","position","tagCompletionMatch","lineAt","text","substring","character","match","provideTagCompletionItems","currentTagName","getCurrentTagName","get","provideAttributeCompletionItems","filter","items","tagName","entries","startsWith","includes","item","vscode","CompletionItem","CompletionItemKind","Class","documentation","MarkdownString","insertText","SnippetString","label","description","sortText","preselect","kind","Snippet","command","title","push","isInAttributeContext","props","forEach","prop","kebabName","name","toLowerCase","kebabItem","Property","type","values","join","events","event","eventItem","Event","kebabEventName","kebabEventItem","externalClasses","externalClass","kebabClassName","kebabClassItem","textBeforeCursor","getText","Range","Position","tagStartIndex","tagEndIndex","i","length","char","tagNameMatch","quoteCount","textFromTagStart","lastIndexOf","Math","max","DEFAULT_TRIGGERS","escapeRegExp","str","camelToKebab","kebabToCamel","g","toUpperCase","isOnTagName","lineText","cursorOffset","tagStart","kebabTagName","tagRegex","RegExp","actualTagName","actualTagStart","indexOf","actualTagEnd","getAttributeInfoAtPosition","openAngle","line","txt","offsetAt","closeAngle","lineCount","tagRange","positionAt","tagContent","attrRegex","exec","fullMatch","attrName","attrStart","index","attrEnd","isEvent","isDynamic","provideHover","kebabComponentName","markdown","isTrusted","supportHtml","appendMarkdown","Hover","attrInfo","find","ec","version","findProp","p","findEvent","e","arguments","arg","default","diagnosticCollection","workspace","onDidChangeTextDocument","updateDiagnostics","initialize","languages","createDiagnosticCollection","languageId","diagnostics","regex","getTagRegex","startPos","endPos","range","checkAttributeValues","checkDuplicateAttributes","checkEventHandlers","checkBooleanAttributes","getAdditionalDiagnostics","uri","propName","staticAttrMatch","severity","DiagnosticSeverity","Error","message","source","dynamicAttrMatch","Warning","attrs","attrMap","attr","rawName","normalizedName","has","originalRawName","eventName","eventRegex","handler","trim","value","module","exports","require","async","componentInfo","parseComponentMarkdown","map","slots","slot","dataStructures","structure","fields","field","loadComponentDoc","context","unifiedProvider","UnifiedComponentCompletionProvider","selector","language","scheme","subscriptions","registerCompletionItemProvider","hover","registerHoverProvider","actualComponentName","possiblePaths","path","resolve","__dirname","docPath","possiblePath","fs","existsSync","warn","content","readFileSync","extractTableSection","concat","extractDataStructures","reduce","acc","processComponentProp","undefined","promises","readFile","split","v","result","normalizedNames","some","existingNames","Set","form","sectionTitle","escape","s","sliceTable","src","from","end","raw","lines","l","validLines","slice","cell","_","arr","row","pascal","w","charAt","m","pipe","dataStructureRegex","structureName","cells","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","registerAll"],"sourceRoot":""}